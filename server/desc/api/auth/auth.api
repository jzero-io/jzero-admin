syntax = "v1"

info (
	go_package: "auth"
)

type PwdLoginRequest {
	Username string `json:"username"`
	Password string `json:"password"`
}

type CodeLoginRequest {
	Email            string `json:"email"`
	VerificationUuid string `json:"verificationUuid"`
	VerificationCode string `json:"verificationCode"`
}

type LoginResponse {
	Token        string `json:"token"`
	RefreshToken string `json:"refreshToken"`
}

type RegisterRequest {
	Email            string `json:"email"`
	VerificationUuid string `json:"verificationUuid"`
	VerificationCode string `json:"verificationCode"`
	Username         string `json:"username"`
	Password         string `json:"password"`
}

type RegisterResponse {}

type GetUserInfoRequest {}

type GetUserInfoResponse {
	UserId   string   `json:"userId"`
	Username string   `json:"username"`
	Roles    []string `json:"roles"`
	Buttons  []string `json:"buttons"`
}

type RefreshTokenRequest {
	RefreshToken string `json:"refreshToken"`
}

type RefreshTokenResponse {
	Token        string `json:"token"`
	RefreshToken string `json:"refreshToken"`
}

type ErrorRequest {}

type ErrorResponse {}

type SendVerificationCodeRequest {
	Email            string `form:"email" validate:"email"`
	VerificationType string `form:"verificationType,option=email|phone"`
}

type SendVerificationCodeResponse {
	VerificationUuid string `json:"verificationUuid"`
}

type ResetPasswordRequest {
	Email            string `json:"email"`
	VerificationUuid string `json:"verificationUuid"`
	VerificationCode string `json:"verificationCode"`
	Password         string `json:"password"`
}

type ResetPasswordResponse {}

@server (
	prefix:          /api
	group:           auth
	compact_handler: true
)
service server {
	@handler PwdLogin
	post /auth/pwd-login (PwdLoginRequest) returns (LoginResponse)

	@handler CodeLogin
	post /auth/code-login (CodeLoginRequest) returns (LoginResponse)

	@handler SendVerificationCode
	get /auth/sendVerificationCode (SendVerificationCodeRequest) returns (SendVerificationCodeResponse)

	@handler Register
	post /auth/register (RegisterRequest) returns (RegisterResponse)

	@handler ResetPassword
	post /auth/resetPassword (ResetPasswordRequest) returns (ResetPasswordResponse)

	@handler RefreshToken
	post /auth/refreshToken (RefreshTokenRequest) returns (RefreshTokenResponse)
}

@server (
	prefix:          /api
	group:           auth
	compact_handler: true
	jwt:             Jwt
)
service server {
	@handler GetUserInfo
	get /auth/getUserInfo (GetUserInfoRequest) returns (GetUserInfoResponse)

	@handler Error
	post /auth/error (ErrorRequest) returns (ErrorResponse)
}

