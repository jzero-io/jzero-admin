syntax = "v1"

info (
	go_package: "auth"
)

type PwdLoginRequest {
	username string `json:"username"`
	password string `json:"password"`
}

type CodeLoginRequest {
	email            string `json:"email"`
	verificationUuid string `json:"verificationUuid"`
	verificationCode string `json:"verificationCode"`
}

type LoginResponse {
	token        string `json:"token"`
	refreshToken string `json:"refreshToken"`
}

type RegisterRequest {
	email            string `json:"email"`
	verificationUuid string `json:"verificationUuid"`
	verificationCode string `json:"verificationCode"`
	username         string `json:"username"`
	password         string `json:"password"`
}

type RegisterResponse {}

type GetUserInfoRequest {}

type GetUserInfoResponse {
	userId   string   `json:"userId"`
	username string   `json:"username"`
	roles    []string `json:"roles"`
	buttons  []string `json:"buttons"`
}

type RefreshTokenRequest {
	refreshToken string `json:"refreshToken"`
}

type RefreshTokenResponse {
	token        string `json:"token"`
	refreshToken string `json:"refreshToken"`
}

type ErrorRequest {}

type ErrorResponse {}

type SendVerificationCodeRequest {
	email            string `form:"email" validate:"email"`
	verificationType string `form:"verificationType,option=email|phone"`
}

type SendVerificationCodeResponse {
	verificationUuid string `json:"verificationUuid"`
}

type ResetPasswordRequest {
	email            string `json:"email"`
	verificationUuid string `json:"verificationUuid"`
	verificationCode string `json:"verificationCode"`
	password         string `json:"password"`
}

type ResetPasswordResponse {}

@server (
	prefix: /api
	group:  auth
)
service server {
	@handler PwdLogin
	post /auth/pwd-login (PwdLoginRequest) returns (LoginResponse)

	@handler CodeLogin
	post /auth/code-login (CodeLoginRequest) returns (LoginResponse)

	@handler SendVerificationCode
	get /auth/sendVerificationCode (SendVerificationCodeRequest) returns (SendVerificationCodeResponse)

	@handler Register
	post /auth/register (RegisterRequest) returns (RegisterResponse)

	@handler ResetPassword
	post /auth/resetPassword (ResetPasswordRequest) returns (ResetPasswordResponse)

	@handler RefreshToken
	post /auth/refreshToken (RefreshTokenRequest) returns (RefreshTokenResponse)
}

@server (
	prefix: /api
	group:  auth
	jwt:    Jwt
)
service server {
	@handler GetUserInfo
	get /auth/getUserInfo (GetUserInfoRequest) returns (GetUserInfoResponse)

	@handler Error
	post /auth/error (ErrorRequest) returns (ErrorResponse)
}

