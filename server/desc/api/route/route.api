syntax = "v1"

info (
	go_package: "route"
)

type Route {
	name      string    `json:"name"`
	path      string    `json:"path"`
	meta      RouteMeta `json:"meta"`
	component string    `json:"component"`
	children  []Route   `json:"children"`
}

type RouteMeta {
	title      string `json:"title"`
	i18nKey    string `json:"i18nKey"`
	icon       string `json:"icon"`
	order      int    `json:"order"`
	hideInMenu bool   `json:"hideInMenu"`
	activeMenu string `json:"activeMenu"`
	mutiTab    bool   `json:"mutiTab"`
	keepAlive  bool   `json:"keepAlive"`
	constant   bool   `json:"constant"`
}

type GetConstantRoutesRequest {}

type GetConstantRoutesResponseItem {
	name      string    `json:"name"`
	path      string    `json:"path"`
	component string    `json:"component"`
	props     bool      `json:"props"`
	meta      RouteMeta `json:"meta"`
}

type GetUserRoutesRequest {}

type GetUserRoutesResponse {
	routes []Route `json:"routes"`
	home   string  `json:"home"`
}

type IsRouteExistRequest {}

type IsRouteExistResponse {}

@server (
	group: route
)
service server {
	@handler GetConstantRoutes
	get /route/getConstantRoutes (GetConstantRoutesRequest) returns ([]GetConstantRoutesResponseItem)

	@handler GetUserRoutes
	get /route/getUserRoutes (GetUserRoutesRequest) returns (GetUserRoutesResponse)

	@handler IsRouteExist
	get /route/isRouteExist (IsRouteExistRequest) returns (IsRouteExistResponse)
}

