syntax = "v1"

info (
	go_package: "manage/menu"
)

import (
	"../common/request.api"
	"../common/response.api"
)

type AddRequest {
	activeMenu      string       `json:"activeMenu,optional"`
	menuType        string       `json:"menuType"`
	menuName        string       `json:"menuName"`
	routeName       string       `json:"routeName"`
	routePath       string       `json:"routePath"`
	component       string       `json:"component"`
	icon            string       `json:"icon"`
	iconType        string       `json:"iconType"`
	parentId        uint64       `json:"parentId"`
	status          string       `json:"status"`
	keepAlive       bool         `json:"keepAlive"`
	constant        bool         `json:"constant"`
	order           uint64       `json:"order"`
	hideInMenu      bool         `json:"hideInMenu"`
	href            string       `json:"href,optional"`
	multiTab        bool         `json:"multiTab,optional"`
	fixedIndexInTab *int64       `json:"fixedIndexInTab,optional"`
	query           []Query      `json:"query,optional"`
	buttonCode      string       `json:"buttonCode,optional"`
	permissions     []Permission `json:"permissions,optional"`
	i18nKey         string       `json:"i18nKey,optional"`
}

type AddResponse {}

type Button {
	code string `json:"code"`
	desc string `json:"desc"`
}

type Permission {
	code string `json:"code"`
	desc string `json:"desc"`
}

type Query {
	key   string `json:"key"`
	value string `json:"value"`
}

type ListRequest {
	PageRequest
}

type SystemMenu {
	id              uint64       `json:"id"`
	activeMenu      string       `json:"activeMenu,optional"`
	menuType        string       `json:"menuType"`
	menuName        string       `json:"menuName"`
	routeName       string       `json:"routeName"`
	routePath       string       `json:"routePath"`
	component       string       `json:"component"`
	icon            string       `json:"icon"`
	iconType        string       `json:"iconType"`
	parentId        uint64       `json:"parentId"`
	status          string       `json:"status"`
	keepAlive       bool         `json:"keepAlive"`
	constant        bool         `json:"constant"`
	order           uint64       `json:"order"`
	hideInMenu      bool         `json:"hideInMenu"`
	href            string       `json:"href,optional"`
	multiTab        bool         `json:"multiTab,optional"`
	fixedIndexInTab *int64       `json:"fixedIndexInTab,optional"`
	query           []Query      `json:"query,optional"`
	buttonCode      string       `json:"buttonCode,optional"`
	permissions     []Permission `json:"permissions,optional"`
	i18nKey         string       `json:"i18nKey,optional"`
	children        []SystemMenu `json:"children"`
}

type ListResponse {
	PageResponse
	records []SystemMenu `json:"records"`
}

type TreeRequest {}

type TreeResponse {
	id       uint64         `json:"id"`
	label    string         `json:"label"`
	pId      uint64         `json:"pId"`
	order    uint64         `json:"-"`
	children []TreeResponse `json:"children"`
}

type GetAllPagesRequest {}

type DeleteRequest {
	ids []uint64 `json:"ids"`
}

type DeleteResponse {}

type EditRequest {
	id              uint64       `json:"id"`
	activeMenu      string       `json:"activeMenu,optional"`
	menuType        string       `json:"menuType"`
	menuName        string       `json:"menuName"`
	routeName       string       `json:"routeName"`
	routePath       string       `json:"routePath"`
	component       string       `json:"component"`
	icon            string       `json:"icon"`
	iconType        string       `json:"iconType"`
	parentId        uint64       `json:"parentId"`
	status          string       `json:"status"`
	keepAlive       bool         `json:"keepAlive"`
	constant        bool         `json:"constant"`
	order           uint64       `json:"order"`
	hideInMenu      bool         `json:"hideInMenu"`
	href            string       `json:"href,optional"`
	mutiTab         bool         `json:"mutiTab,optional"`
	fixedIndexInTab *int64       `json:"fixedIndexInTab,optional"`
	query           []Query      `json:"query"`
	buttonCode      string       `json:"buttonCode,optional"`
	permissions     []Permission `json:"permissions"`
	i18nKey         string       `json:"i18nKey"`
}

type EditResponse {}

@server (
	prefix:     /api
	group:      manage/menu
	jwt:        Jwt
	middleware: Authx
)
service server {
	@handler List
	get /manage/getMenuList/v2 (ListRequest) returns (ListResponse)

	@handler Tree
	get /manage/getMenuTree (TreeRequest) returns ([]TreeResponse)

	@handler GetAllPages
	get /manage/getAllPages (GetAllPagesRequest) returns ([]string)

	@handler Add
	post /manage/addMenu (AddRequest) returns (AddResponse)

	@handler Delete
	post /manage/deleteMenu (DeleteRequest) returns (DeleteResponse)

	@handler Edit
	post /manage/editMenu (EditRequest) returns (EditResponse)
}

