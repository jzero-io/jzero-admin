// Code generated by jzero. DO NOT EDIT.

package handler

import (
	"fmt"
	"net/http"
	"strings"
)

var routesCodesMap = map[string]string{
	"GET:/version":                   "version:get",
	"POST:/auth/code-login":          "auth:codeLogin",
	"POST:/auth/pwd-login":           "auth:pwdLogin",
	"POST:/auth/register":            "auth:register",
	"POST:/auth/resetPassword":       "auth:resetPassword",
	"GET:/auth/sendVerificationCode": "auth:sendVerificationCode",
	"POST:/auth/error":               "auth:error",
	"GET:/auth/getUserInfo":          "auth:getUserInfo",
	"POST:/auth/refreshToken":        "auth:refreshToken",
	"POST:/manage/addMenu":           "manage:menu:add",
	"POST:/manage/deleteMenu":        "manage:menu:delete",
	"POST:/manage/editMenu":          "manage:menu:edit",
	"GET:/manage/getAllPages":        "manage:menu:getAllPages",
	"GET:/manage/getMenuList/v2":     "manage:menu:list",
	"GET:/manage/getMenuTree":        "manage:menu:tree",
	"POST:/manage/addRole":           "manage:role:add",
	"POST:/manage/deleteRole":        "manage:role:delete",
	"POST:/manage/editRole":          "manage:role:edit",
	"GET:/manage/getAllRoles":        "manage:role:getAll",
	"GET:/manage/getRoleList":        "manage:role:list",
	"GET:/manage/getRoleMenus":       "manage:role:getMenus",
	"POST:/manage/setRoleMenus":      "manage:role:setMenus",
	"POST:/manage/addUser":           "manage:user:add",
	"POST:/manage/deleteUser":        "manage:user:delete",
	"POST:/manage/editUser":          "manage:user:edit",
	"GET:/manage/getUserList":        "manage:user:list",
	"GET:/route/getConstantRoutes":   "route:getConstantRoutes",
	"GET:/route/getUserRoutes":       "route:getUserRoutes",
	"GET:/route/isRouteExist":        "route:isRouteExist",
}

func Route2Code(r *http.Request) string {
	path := r.URL.Path
	method := r.Method
	return routesCodesMap[fmt.Sprintf("%s:%s", strings.ToUpper(method), path)]
}
